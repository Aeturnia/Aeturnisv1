#!/bin/bash
# complete-unit.sh - Unit Complete Script from ErrorFixv2.md Appendix C

UNIT_ID=$1

if [ -z "$UNIT_ID" ]; then
  echo "Usage: $0 <UNIT_ID>"
  echo "Example: $0 TYPE-A-001"
  exit 1
fi

if [ ! -d "./units/$UNIT_ID" ]; then
  echo "Error: Unit $UNIT_ID not found. Run start-unit.sh first."
  exit 1
fi

cd "./units/$UNIT_ID"

echo "Completing Unit $UNIT_ID..."

# Run verification
echo "Running final verification..."
npm run typecheck 2>&1 > final-errors.txt
npm test 2>&1 > final-tests.txt
npm run lint 2>&1 > final-lint.txt

# Count final errors
FINAL_TS_ERRORS=$(grep -c "error TS" final-errors.txt || echo "0")
FINAL_ESLINT_ERRORS=$(grep -c "error" final-lint.txt || echo "0")

# Get baseline from tracking file
BASELINE_TS_ERRORS=$(jq -r '.baselineErrors.typescript // 0' unit.json)
BASELINE_ESLINT_ERRORS=$(jq -r '.baselineErrors.eslint // 0' unit.json)

# Calculate improvements
TS_IMPROVEMENT=$((BASELINE_TS_ERRORS - FINAL_TS_ERRORS))
ESLINT_IMPROVEMENT=$((BASELINE_ESLINT_ERRORS - FINAL_ESLINT_ERRORS))

# Update tracking
jq '.endTime = "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'" | 
    .status = "complete" | 
    .finalErrors = {
      "typescript": '$FINAL_TS_ERRORS',
      "eslint": '$FINAL_ESLINT_ERRORS'
    } |
    .improvement = {
      "typescript": '$TS_IMPROVEMENT',
      "eslint": '$ESLINT_IMPROVEMENT'
    }' unit.json > tmp.json
mv tmp.json unit.json

# Generate completion report
cat > report.md << EOF
# Unit $UNIT_ID Completion Report

**Agent:** $(jq -r '.agent' unit.json)  
**Start Time:** $(jq -r '.startTime' unit.json)  
**End Time:** $(jq -r '.endTime' unit.json)  
**Status:** $(jq -r '.status' unit.json)  

## Error Reduction

### TypeScript Errors
- **Baseline:** $BASELINE_TS_ERRORS
- **Final:** $FINAL_TS_ERRORS
- **Improvement:** $TS_IMPROVEMENT errors fixed

### ESLint Errors
- **Baseline:** $BASELINE_ESLINT_ERRORS
- **Final:** $FINAL_ESLINT_ERRORS
- **Improvement:** $ESLINT_IMPROVEMENT errors fixed

## Quality Checks

\`\`\`bash
# Run these commands to verify:
npm run typecheck
npm run lint
npm test
\`\`\`

## Files Modified
$(git diff --name-only HEAD~1 | head -10)

## Next Steps
- Review report.md for quality verification
- Commit changes if all checks pass
- Move to next unit in sequence

---
*Generated by complete-unit.sh from ErrorFixv2.md Appendix C*
EOF

echo "Unit $UNIT_ID completed successfully!"
echo "TypeScript errors: $BASELINE_TS_ERRORS → $FINAL_TS_ERRORS (improved by $TS_IMPROVEMENT)"
echo "ESLint errors: $BASELINE_ESLINT_ERRORS → $FINAL_ESLINT_ERRORS (improved by $ESLINT_IMPROVEMENT)"
echo "Report generated: ./units/$UNIT_ID/report.md"