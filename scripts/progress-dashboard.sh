#!/bin/bash
# progress-dashboard.sh - Progress Dashboard Generator from ErrorFixv2.md

echo "# Error Resolution Progress Dashboard"
echo ""
echo "**Last Updated:** $(date -u +%Y-%m-%dT%H:%M:%SZ)"

# Count current errors
echo "**Current Status:**"
CURRENT_TS_ERRORS=$(npm run typecheck 2>&1 | grep -c "error TS" || echo "0")
CURRENT_ESLINT_ERRORS=$(npm run lint 2>&1 | grep -c "error" || echo "0")
TOTAL_ERRORS=$((CURRENT_TS_ERRORS + CURRENT_ESLINT_ERRORS))

echo "- TypeScript Errors: $CURRENT_TS_ERRORS"
echo "- ESLint Errors: $CURRENT_ESLINT_ERRORS"
echo "- **Total Remaining:** $TOTAL_ERRORS"
echo ""

# Count completed units
COMPLETED_UNITS=$(find ./units -name "unit.json" -exec jq -r 'select(.status=="complete") | .id' {} \; 2>/dev/null | wc -l || echo "0")
IN_PROGRESS_UNITS=$(find ./units -name "unit.json" -exec jq -r 'select(.status=="in-progress") | .id' {} \; 2>/dev/null | wc -l || echo "0")
ROLLED_BACK_UNITS=$(find ./units -name "unit.json" -exec jq -r 'select(.status=="rolled-back") | .id' {} \; 2>/dev/null | wc -l || echo "0")

echo "## Unit Status"
echo "- ✅ Completed: $COMPLETED_UNITS units"
echo "- 🔄 In Progress: $IN_PROGRESS_UNITS units"
echo "- ↩️ Rolled Back: $ROLLED_BACK_UNITS units"
echo ""

# List recent activity
echo "## Recent Activity"
if [ -d "./units" ]; then
  find ./units -name "unit.json" -exec sh -c '
    for file; do
      if [ -f "$file" ]; then
        echo "- $(jq -r ".startTime // \"Unknown\"" "$file" | cut -d"T" -f1): Unit $(jq -r ".id" "$file") by $(jq -r ".agent" "$file") - $(jq -r ".status" "$file")"
      fi
    done
  ' sh {} \; | sort -r | head -10
else
  echo "- No units found"
fi
echo ""

# Show error trend
echo "## Error Reduction Trend"
if [ "$COMPLETED_UNITS" -gt 0 ]; then
  TOTAL_TS_FIXED=$(find ./units -name "unit.json" -exec jq -r 'select(.status=="complete") | .improvement.typescript // 0' {} \; 2>/dev/null | awk '{sum+=$1} END {print sum+0}')
  TOTAL_ESLINT_FIXED=$(find ./units -name "unit.json" -exec jq -r 'select(.status=="complete") | .improvement.eslint // 0' {} \; 2>/dev/null | awk '{sum+=$1} END {print sum+0}')
  
  echo "- TypeScript errors fixed: $TOTAL_TS_FIXED"
  echo "- ESLint errors fixed: $TOTAL_ESLINT_FIXED"
  echo "- **Total errors fixed: $((TOTAL_TS_FIXED + TOTAL_ESLINT_FIXED))**"
else
  echo "- No completed units to analyze"
fi
echo ""

# Performance metrics
echo "## Performance Metrics"
if [ "$COMPLETED_UNITS" -gt 0 ]; then
  AVG_ERRORS_PER_UNIT=$(echo "scale=1; ($TOTAL_TS_FIXED + $TOTAL_ESLINT_FIXED) / $COMPLETED_UNITS" | bc -l 2>/dev/null || echo "N/A")
  echo "- Average errors fixed per unit: $AVG_ERRORS_PER_UNIT"
  
  if [ "$TOTAL_ERRORS" -gt 0 ] && [ "$COMPLETED_UNITS" -gt 0 ]; then
    ESTIMATED_REMAINING_UNITS=$(echo "scale=0; $TOTAL_ERRORS / $AVG_ERRORS_PER_UNIT" | bc -l 2>/dev/null || echo "N/A")
    echo "- Estimated remaining units needed: $ESTIMATED_REMAINING_UNITS"
  fi
else
  echo "- No performance data available yet"
fi
echo ""

# Quality indicators
echo "## Quality Indicators"
echo "- Server Status: $(curl -s http://localhost:8080/health >/dev/null && echo "✅ Running" || echo "❌ Down")"
echo "- Build Status: $(npm run typecheck >/dev/null 2>&1 && echo "✅ Clean" || echo "❌ Errors")"
echo "- Test Status: $(npm test >/dev/null 2>&1 && echo "✅ Passing" || echo "❌ Failing")"
echo ""

echo "---"
echo "*Generated by progress-dashboard.sh from ErrorFixv2.md*"